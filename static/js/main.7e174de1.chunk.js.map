{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","join","filter","element","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7e174de1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};\r\n","import React, {useState} from 'react';\r\n\r\n\r\nexport default function TextForm(props){\r\n    const handleUpClick = ()=>{\r\n        console.log('Uppercase was clicked '+ text);\r\n        let newText= text.toUpperCase();\r\n        setText(newText)\r\n        //props.showAlert('Converted to UpperCase!', 'success');\r\n    }\r\n    const handleLoClick = ()=>{\r\n        console.log('Lowercase was clicked '+ text);\r\n        let newText= text.toLowerCase();\r\n        setText(newText)\r\n        //props.showAlert('Converted to LowerCase!', 'success');\r\n    }\r\n    const handleClear = ()=>{\r\n        console.log('Cleared text');\r\n        let newText= '';\r\n        setText(newText)\r\n       // props.showAlert('Text Cleared!', 'success');\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(' '))\r\n        //props.showAlert('WhiteSpaces removed', 'success');\r\n    \r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743' }} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div> \r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClear}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Clear Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary:</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(' ').length} minutes read.</p>\r\n            <h3>Preview:</h3>\r\n            <p>{text.length>0?text:'Enter something above to preview.'}</p>\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","// import About from './About';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   //Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode = ()=>{\n    if (mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode has been enabled', 'success');\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} aboutText=\"About-TextUtils\" toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my=3\" >\n    {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About/>\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={setAlert} heading=\"Enter text to analyze below\" mode={mode} />\n          {/* </Route> */}\n      {/* </Switch> */}\n      \n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}